<?xml version="1.0"?>

<robot name="usv" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="usv_base">

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find usv_gazebo)/urdf/materials.urdf.xacro" />
  <!-- Replace original usv file with new one with minimial inertia-->
  <xacro:include filename="$(find usv_gazebo)/urdf/parts.mininertia.urdf.xacro" />
  
  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="HH" value="0.09" />
  <!-- BASE-FOOTPRINT -->
  <!-- base_fotporint is a fictitious link(frame) that is on the ground right below base_link origin, navigation stack depends on this frame -->
  <link name="base_footprint">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 ${HH} " />
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0"
	       iyy="1e-6" iyz="0.0" 
	       izz="1e-6" />
    </inertial>
    
    <visual>
      <origin xyz="0 0 ${HH}" rpy="0 0 0" />
      <geometry>
	<box size="0.001 0.001 0.001" />
      </geometry>
    </visual>
  </link>
  

  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="29" />
      <!--This is the pose of the inertial reference frame, relative to the link reference frame. The origin of the inertial reference frame needs to be at the center of gravity. The axes of the inertial reference frame do not need to be aligned with the principal axes of the inertia.-->
      <origin xyz="0 0 ${HH}" />
      <!--The 3x3 rotational inertia matrix. Because the rotational inertia matrix is symmetric, only 6 above-diagonal elements of this matrix are specified here, using the attributes ixx, ixy, ixz, iyy, iyz, izz.-->
      <inertia ixx="10" ixy="0" ixz="0" iyy="10" iyz="0" izz="10" /> 
    </inertial>
        
    <visual>
      <origin xyz="0 0 ${HH}" rpy="${M_PI/2} 0 ${M_PI/2}" />
      <geometry>
	<mesh filename="package://usv_gazebo/meshes/usv_base.stl" />
      </geometry>
      <material name="DarkGray" />
    </visual>
    
    <collision>
      <origin xyz="0 0 ${HH}" rpy="0 0 0" />
      <geometry>
	<box size = "1.35 0.98 0.2"/> <!--making it slightly bigger in x and z direction-->
      </geometry>
    </collision>     
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${HH}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
  <gazebo reference="base_link">
    <material>Gazebo/FlatBlack</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  

  <!-- PANEL-LINKS -->
  <!-- Top Plate -->
  <usv_part parent="base_footprint" name="left_panel" mesh="left_panel" 
		   translateX="0.0" translateY="-0.35" translateZ="${0.05+HH*2}" 
		   rotateX="${M_PI/2}" rotateY="0.0" rotateZ="${M_PI/2}"
		   color="Yellow" />
  <gazebo reference="base_footprint_left_panel_part">
    <material>Gazebo/Yellow</material>
  </gazebo>
  
  <usv_part parent="base_footprint" name="right_panel" mesh="right_panel" 
		   translateX="0.0" translateY="0.35" translateZ="${0.05+HH*2}" 
		   rotateX="${M_PI/2}" rotateY="0.0" rotateZ="${-M_PI/2}"
		   color="Yellow" />
  <gazebo reference="base_footprint_right_panel_part">
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- Define a location for the camera to sit -->
  <xacro:property name="camera_size" value="0.05" /> <!-- Size of square 'camera' box -->
  
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.32 0 0.5" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="red"/>
    </visual>  
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>    
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

</xacro:macro>
</robot>
